version: "3.9"

services:
  postgres:
    image: postgres:17.5
    container_name: fastapi_postgres_prod
    # DO NOT expose database port in production
    # ports:
    #   - "5432:5432"
    env_file:
      - .env.production
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - fastapi_network
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  api:
    image: alimunir/fastapi-social-app:latest
    # Or build from production Dockerfile:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.prod
    container_name: fastapi_api_prod
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "80:8000"
    env_file:
      - .env.production
    environment:
      - DATABASE_HOSTNAME=postgres
      - DATABASE_PORT=5432
    command: bash -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --access-logfile - --error-logfile -"
    restart: unless-stopped
    networks:
      - fastapi_network
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "1.0"
          memory: 1G
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_prod_data:
    driver: local

networks:
  fastapi_network:
    driver: bridge
